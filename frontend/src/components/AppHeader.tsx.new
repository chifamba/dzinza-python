import * as React from 'react';
import Link from 'next/link';
import { Button } from "@/components/ui/button";
import { TreeSelector } from "./tree/TreeSelector";
import { TreeSettingsModal } from "./tree/TreeSettingsModal";
import { useAuth } from "@/contexts/AuthContext";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Settings, UserCircle } from "lucide-react";

export interface AppHeaderProps {}

const AppHeader: React.FC<AppHeaderProps> = () => {
  const { user, logout } = useAuth();
  const [treeSettingsOpen, setTreeSettingsOpen] = React.useState(false);

  return (
    <>
      <header className="bg-card text-card-foreground p-4 shadow-sm">
        <div className="container mx-auto flex justify-between items-center">
          <div className="flex items-center gap-4">
            <h1 className="text-2xl font-bold text-primary">Dzinza</h1>
            {user && (
              <>
                <TreeSelector />
                {user.active_tree_id && (
                  <Button
                    variant="outline"
                    size="icon"
                    onClick={() => setTreeSettingsOpen(true)}
                  >
                    <Settings className="h-4 w-4" />
                  </Button>
                )}
              </>
            )}
          </div>
          <div className="flex items-center gap-4">
            <div className="space-x-2">
              <Button variant="outline">Add Person</Button>
              <Button variant="ghost">Reset View</Button>
            </div>
            
            {user && (
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" size="icon">
                    <UserCircle className="h-5 w-5" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuLabel>
                    {user.username}
                  </DropdownMenuLabel>
                  <DropdownMenuSeparator />
                  {user.role === 'admin' && (
                    <DropdownMenuItem asChild>
                      <Link href="/admin">Admin Panel</Link>
                    </DropdownMenuItem>
                  )}
                  <DropdownMenuItem onClick={logout}>
                    Logout
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            )}
          </div>
        </div>
      </header>

      {user?.active_tree_id && (
        <TreeSettingsModal
          isOpen={treeSettingsOpen}
          onClose={() => setTreeSettingsOpen(false)}
        />
      )}
    </>
  );
};

export default AppHeader;
