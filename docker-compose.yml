# docker-compose.yml (in project root: dzinza-python/)

services:
  dbservice:
    image: postgres:15-alpine
    container_name: dzinza-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: dzinza-backend
    ports:
      - "8090:8090"
    depends_on:
      dbservice:
        condition: service_healthy # Wait for the database to be healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@dbservice:5432/${POSTGRES_DB}
    restart: unless-stopped

volumes:
  db_data:
    driver: local

# Optional: Define named volumes if you prefer them over bind mounts
# volumes:
#   backend_data:
#   backend_logs:

