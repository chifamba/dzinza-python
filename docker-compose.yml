# docker-compose.yml (in project root: dzinza-python/)
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"
    tag: "{{.Name}}"
services:
  redis:
    image: redis:latest
    container_name: dzinza-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    logging: *logging

  dbservice:
    image: postgres:15-alpine
    container_name: dzinza-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    logging: *logging

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: dzinza-backend
    ports:
      - "8090:8090"
    depends_on:
      dbservice:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@dbservice:5432/${POSTGRES_DB}
      - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
      - REDIS_URL=redis://redis:6379/0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318  # Changed from localhost to service name
    restart: unless-stopped
    logging: *logging
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dzinza-frontend
    ports:
      - "5173:80"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped
    logging: *logging

volumes:
  db_data:
    driver: local